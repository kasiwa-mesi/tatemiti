rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read
    }

    match /users {
      match /{userId} {
        allow write:if true
          && request.auth.uid == userId
          && validateString(incomingData().displayName, 0, 512)
          && validateString(incomingData().photoUrl, 0, 512)
        ;
      }
    }
    match /projects {
      match /{projectId} {
        allow create: if true
          && request.auth.uid == incomingData().userId
          && validateString(incomingData().name, 0, 512);
          match /messages/{messageId} {
            allow create: if true
              || validateString(incomingData().text, 0, 512)
              || validateString(incomingData().link, 0, 512)
              || validateString(incomingData().image, 0, 512)
          }
      }
    }
  }
  function incomingData() {
    return request.resource.data;
  }

  function validateString(text, min, max) {
    return text is string && min <= text.size() && text.size() <= max;
  }

  function isUserAuthenticated() {
		return request.auth != null;
	}
}